Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 800 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 3200 requires_grad=True
embeddings.0.weight 22809600 requires_grad=True
embeddings.1.weight 1472000 requires_grad=True
embeddings.2.weight 1168000 requires_grad=True
Total # parameters = 25452800
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.6120612621307373
test:  0.5967411994934082
	 VALID :  {'MRR': 0.6120612621307373, 'hits@[1,3,10]': tensor([0.5303, 0.6609, 0.7612])}
	 TEST : {'MRR': 0.5967411994934082, 'hits@[1,3,10]': tensor([0.5108, 0.6484, 0.7544])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.6180337071418762
test:  0.6053183078765869
	 VALID :  {'MRR': 0.6180337071418762, 'hits@[1,3,10]': tensor([0.5378, 0.6649, 0.7670])}
	 TEST : {'MRR': 0.6053183078765869, 'hits@[1,3,10]': tensor([0.5224, 0.6557, 0.7572])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.6198868155479431
test:  0.6087121069431305
	 VALID :  {'MRR': 0.6198868155479431, 'hits@[1,3,10]': tensor([0.5400, 0.6676, 0.7669])}
	 TEST : {'MRR': 0.6087121069431305, 'hits@[1,3,10]': tensor([0.5272, 0.6572, 0.7584])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.6215294301509857
test:  0.6094098687171936
	 VALID :  {'MRR': 0.6215294301509857, 'hits@[1,3,10]': tensor([0.5423, 0.6673, 0.7673])}
	 TEST : {'MRR': 0.6094098687171936, 'hits@[1,3,10]': tensor([0.5281, 0.6567, 0.7584])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.6225334405899048
test:  0.609954833984375
	 VALID :  {'MRR': 0.6225334405899048, 'hits@[1,3,10]': tensor([0.5439, 0.6679, 0.7669])}
	 TEST : {'MRR': 0.609954833984375, 'hits@[1,3,10]': tensor([0.5283, 0.6589, 0.7578])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.6222587525844574
test:  0.6103467345237732
	 VALID :  {'MRR': 0.6222587525844574, 'hits@[1,3,10]': tensor([0.5428, 0.6689, 0.7677])}
	 TEST : {'MRR': 0.6103467345237732, 'hits@[1,3,10]': tensor([0.5288, 0.6588, 0.7585])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.6221761405467987
test:  0.6114889085292816
	 VALID :  {'MRR': 0.6221761405467987, 'hits@[1,3,10]': tensor([0.5432, 0.6690, 0.7671])}
	 TEST : {'MRR': 0.6114889085292816, 'hits@[1,3,10]': tensor([0.5309, 0.6608, 0.7595])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.6227968037128448
test:  0.611086368560791
	 VALID :  {'MRR': 0.6227968037128448, 'hits@[1,3,10]': tensor([0.5447, 0.6691, 0.7667])}
	 TEST : {'MRR': 0.611086368560791, 'hits@[1,3,10]': tensor([0.5298, 0.6600, 0.7593])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.6233265697956085
test:  0.6122777760028839
	 VALID :  {'MRR': 0.6233265697956085, 'hits@[1,3,10]': tensor([0.5455, 0.6688, 0.7665])}
	 TEST : {'MRR': 0.6122777760028839, 'hits@[1,3,10]': tensor([0.5319, 0.6599, 0.7595])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.6222834587097168
test:  0.6114986836910248
	 VALID :  {'MRR': 0.6222834587097168, 'hits@[1,3,10]': tensor([0.5440, 0.6679, 0.7667])}
	 TEST : {'MRR': 0.6114986836910248, 'hits@[1,3,10]': tensor([0.5305, 0.6599, 0.7601])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.621389240026474
test:  0.6094202399253845
	 VALID :  {'MRR': 0.621389240026474, 'hits@[1,3,10]': tensor([0.5436, 0.6658, 0.7665])}
	 TEST : {'MRR': 0.6094202399253845, 'hits@[1,3,10]': tensor([0.5280, 0.6567, 0.7585])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.6249442994594574
test:  0.6129400730133057
	 VALID :  {'MRR': 0.6249442994594574, 'hits@[1,3,10]': tensor([0.5462, 0.6719, 0.7688])}
	 TEST : {'MRR': 0.6129400730133057, 'hits@[1,3,10]': tensor([0.5319, 0.6593, 0.7613])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.626928836107254
test:  0.6151116192340851
	 VALID :  {'MRR': 0.626928836107254, 'hits@[1,3,10]': tensor([0.5481, 0.6720, 0.7712])}
	 TEST : {'MRR': 0.6151116192340851, 'hits@[1,3,10]': tensor([0.5343, 0.6621, 0.7637])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.6268905997276306
test:  0.6160279214382172
	 VALID :  {'MRR': 0.6268905997276306, 'hits@[1,3,10]': tensor([0.5474, 0.6743, 0.7727])}
	 TEST : {'MRR': 0.6160279214382172, 'hits@[1,3,10]': tensor([0.5357, 0.6638, 0.7648])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6285269856452942
test:  0.6167468130588531
	 VALID :  {'MRR': 0.6285269856452942, 'hits@[1,3,10]': tensor([0.5498, 0.6741, 0.7732])}
	 TEST : {'MRR': 0.6167468130588531, 'hits@[1,3,10]': tensor([0.5365, 0.6631, 0.7652])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.6277823448181152
test:  0.6160501837730408
	 VALID :  {'MRR': 0.6277823448181152, 'hits@[1,3,10]': tensor([0.5485, 0.6740, 0.7739])}
	 TEST : {'MRR': 0.6160501837730408, 'hits@[1,3,10]': tensor([0.5351, 0.6636, 0.7654])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.6279129981994629
test:  0.6167933940887451
	 VALID :  {'MRR': 0.6279129981994629, 'hits@[1,3,10]': tensor([0.5487, 0.6738, 0.7736])}
	 TEST : {'MRR': 0.6167933940887451, 'hits@[1,3,10]': tensor([0.5361, 0.6638, 0.7661])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.6271140277385712
test:  0.6163384020328522
	 VALID :  {'MRR': 0.6271140277385712, 'hits@[1,3,10]': tensor([0.5474, 0.6741, 0.7738])}
	 TEST : {'MRR': 0.6163384020328522, 'hits@[1,3,10]': tensor([0.5354, 0.6635, 0.7659])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.6272580623626709
test:  0.6158744692802429
	 VALID :  {'MRR': 0.6272580623626709, 'hits@[1,3,10]': tensor([0.5478, 0.6735, 0.7727])}
	 TEST : {'MRR': 0.6158744692802429, 'hits@[1,3,10]': tensor([0.5350, 0.6634, 0.7653])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.6271235346794128
test:  0.6157925128936768
Early stopping ...


TEST :  {'MRR': 0.6167468130588531, 'hits@[1,3,10]': tensor([0.5365, 0.6631, 0.7652])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 800 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 3200 requires_grad=True
embeddings.0.weight 22809600 requires_grad=True
embeddings.1.weight 1472000 requires_grad=True
embeddings.2.weight 1168000 requires_grad=True
Total # parameters = 25452800
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.6098674237728119
test:  0.5990692675113678
	 VALID :  {'MRR': 0.6098674237728119, 'hits@[1,3,10]': tensor([0.5261, 0.6622, 0.7623])}
	 TEST : {'MRR': 0.5990692675113678, 'hits@[1,3,10]': tensor([0.5132, 0.6511, 0.7558])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.6167543232440948
test:  0.6054286658763885
	 VALID :  {'MRR': 0.6167543232440948, 'hits@[1,3,10]': tensor([0.5353, 0.6652, 0.7646])}
	 TEST : {'MRR': 0.6054286658763885, 'hits@[1,3,10]': tensor([0.5216, 0.6565, 0.7582])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.6191105842590332
test:  0.6081180572509766
	 VALID :  {'MRR': 0.6191105842590332, 'hits@[1,3,10]': tensor([0.5394, 0.6663, 0.7650])}
	 TEST : {'MRR': 0.6081180572509766, 'hits@[1,3,10]': tensor([0.5256, 0.6584, 0.7589])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.6202771961688995
test:  0.6087106764316559
	 VALID :  {'MRR': 0.6202771961688995, 'hits@[1,3,10]': tensor([0.5405, 0.6678, 0.7655])}
	 TEST : {'MRR': 0.6087106764316559, 'hits@[1,3,10]': tensor([0.5261, 0.6580, 0.7600])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.6216613948345184
test:  0.6100162863731384
	 VALID :  {'MRR': 0.6216613948345184, 'hits@[1,3,10]': tensor([0.5429, 0.6683, 0.7652])}
	 TEST : {'MRR': 0.6100162863731384, 'hits@[1,3,10]': tensor([0.5290, 0.6568, 0.7590])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.6216160953044891
test:  0.6105840504169464
	 VALID :  {'MRR': 0.6216160953044891, 'hits@[1,3,10]': tensor([0.5432, 0.6679, 0.7655])}
	 TEST : {'MRR': 0.6105840504169464, 'hits@[1,3,10]': tensor([0.5299, 0.6580, 0.7601])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.6227692365646362
test:  0.6109937131404877
	 VALID :  {'MRR': 0.6227692365646362, 'hits@[1,3,10]': tensor([0.5443, 0.6688, 0.7667])}
	 TEST : {'MRR': 0.6109937131404877, 'hits@[1,3,10]': tensor([0.5302, 0.6587, 0.7602])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.62213334441185
test:  0.6113105118274689
	 VALID :  {'MRR': 0.62213334441185, 'hits@[1,3,10]': tensor([0.5432, 0.6678, 0.7667])}
	 TEST : {'MRR': 0.6113105118274689, 'hits@[1,3,10]': tensor([0.5306, 0.6584, 0.7599])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.6222359538078308
test:  0.6113834381103516
	 VALID :  {'MRR': 0.6222359538078308, 'hits@[1,3,10]': tensor([0.5433, 0.6684, 0.7661])}
	 TEST : {'MRR': 0.6113834381103516, 'hits@[1,3,10]': tensor([0.5308, 0.6588, 0.7594])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.6224967241287231
test:  0.6121395528316498
	 VALID :  {'MRR': 0.6224967241287231, 'hits@[1,3,10]': tensor([0.5436, 0.6690, 0.7669])}
	 TEST : {'MRR': 0.6121395528316498, 'hits@[1,3,10]': tensor([0.5321, 0.6594, 0.7598])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.6204565763473511
test:  0.6085880398750305
	 VALID :  {'MRR': 0.6204565763473511, 'hits@[1,3,10]': tensor([0.5411, 0.6673, 0.7670])}
	 TEST : {'MRR': 0.6085880398750305, 'hits@[1,3,10]': tensor([0.5259, 0.6577, 0.7597])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.6233171224594116
test:  0.6141099631786346
	 VALID :  {'MRR': 0.6233171224594116, 'hits@[1,3,10]': tensor([0.5431, 0.6724, 0.7700])}
	 TEST : {'MRR': 0.6141099631786346, 'hits@[1,3,10]': tensor([0.5324, 0.6623, 0.7638])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.6249798238277435
test:  0.6155330836772919
	 VALID :  {'MRR': 0.6249798238277435, 'hits@[1,3,10]': tensor([0.5453, 0.6720, 0.7718])}
	 TEST : {'MRR': 0.6155330836772919, 'hits@[1,3,10]': tensor([0.5342, 0.6636, 0.7660])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.6259700357913971
test:  0.6172101497650146
	 VALID :  {'MRR': 0.6259700357913971, 'hits@[1,3,10]': tensor([0.5458, 0.6740, 0.7727])}
	 TEST : {'MRR': 0.6172101497650146, 'hits@[1,3,10]': tensor([0.5358, 0.6657, 0.7678])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6260697543621063
test:  0.6184302568435669
	 VALID :  {'MRR': 0.6260697543621063, 'hits@[1,3,10]': tensor([0.5458, 0.6753, 0.7736])}
	 TEST : {'MRR': 0.6184302568435669, 'hits@[1,3,10]': tensor([0.5376, 0.6670, 0.7677])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.6267676651477814
test:  0.6179051995277405
	 VALID :  {'MRR': 0.6267676651477814, 'hits@[1,3,10]': tensor([0.5469, 0.6753, 0.7744])}
	 TEST : {'MRR': 0.6179051995277405, 'hits@[1,3,10]': tensor([0.5362, 0.6667, 0.7680])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.6270690858364105
test:  0.6184923946857452
	 VALID :  {'MRR': 0.6270690858364105, 'hits@[1,3,10]': tensor([0.5481, 0.6747, 0.7743])}
	 TEST : {'MRR': 0.6184923946857452, 'hits@[1,3,10]': tensor([0.5379, 0.6664, 0.7678])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.6260569095611572
test:  0.6185486018657684
	 VALID :  {'MRR': 0.6260569095611572, 'hits@[1,3,10]': tensor([0.5462, 0.6738, 0.7737])}
	 TEST : {'MRR': 0.6185486018657684, 'hits@[1,3,10]': tensor([0.5378, 0.6656, 0.7677])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.6264337301254272
test:  0.6176868081092834
	 VALID :  {'MRR': 0.6264337301254272, 'hits@[1,3,10]': tensor([0.5468, 0.6743, 0.7728])}
	 TEST : {'MRR': 0.6176868081092834, 'hits@[1,3,10]': tensor([0.5369, 0.6651, 0.7667])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.626596987247467
test:  0.6177283823490143
	 VALID :  {'MRR': 0.626596987247467, 'hits@[1,3,10]': tensor([0.5473, 0.6738, 0.7732])}
	 TEST : {'MRR': 0.6177283823490143, 'hits@[1,3,10]': tensor([0.5373, 0.6651, 0.7670])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.6255872845649719
test:  0.6168911755084991
	 VALID :  {'MRR': 0.6255872845649719, 'hits@[1,3,10]': tensor([0.5456, 0.6729, 0.7725])}
	 TEST : {'MRR': 0.6168911755084991, 'hits@[1,3,10]': tensor([0.5362, 0.6638, 0.7668])}
[ Epoch: 105 ]
[ Epoch: 106 ]
[ Epoch: 107 ]
[ Epoch: 108 ]
[ Epoch: 109 ]
valid:  0.6255515515804291
test:  0.6169866323471069
Early stopping ...


TEST :  {'MRR': 0.6184923946857452, 'hits@[1,3,10]': tensor([0.5379, 0.6664, 0.7678])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 800 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 3200 requires_grad=True
embeddings.0.weight 22809600 requires_grad=True
embeddings.1.weight 1472000 requires_grad=True
embeddings.2.weight 1168000 requires_grad=True
Total # parameters = 25452800
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.610121488571167
test:  0.5975420475006104
	 VALID :  {'MRR': 0.610121488571167, 'hits@[1,3,10]': tensor([0.5252, 0.6632, 0.7596])}
	 TEST : {'MRR': 0.5975420475006104, 'hits@[1,3,10]': tensor([0.5145, 0.6449, 0.7505])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.6179267764091492
test:  0.605910986661911
	 VALID :  {'MRR': 0.6179267764091492, 'hits@[1,3,10]': tensor([0.5369, 0.6678, 0.7641])}
	 TEST : {'MRR': 0.605910986661911, 'hits@[1,3,10]': tensor([0.5258, 0.6512, 0.7535])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.6200898289680481
test:  0.6084237098693848
	 VALID :  {'MRR': 0.6200898289680481, 'hits@[1,3,10]': tensor([0.5395, 0.6697, 0.7669])}
	 TEST : {'MRR': 0.6084237098693848, 'hits@[1,3,10]': tensor([0.5281, 0.6542, 0.7561])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.6212138831615448
test:  0.6094711124897003
	 VALID :  {'MRR': 0.6212138831615448, 'hits@[1,3,10]': tensor([0.5404, 0.6710, 0.7672])}
	 TEST : {'MRR': 0.6094711124897003, 'hits@[1,3,10]': tensor([0.5291, 0.6570, 0.7562])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.6224575936794281
test:  0.6097727119922638
	 VALID :  {'MRR': 0.6224575936794281, 'hits@[1,3,10]': tensor([0.5422, 0.6712, 0.7676])}
	 TEST : {'MRR': 0.6097727119922638, 'hits@[1,3,10]': tensor([0.5298, 0.6561, 0.7565])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.6224531531333923
test:  0.6101644933223724
	 VALID :  {'MRR': 0.6224531531333923, 'hits@[1,3,10]': tensor([0.5422, 0.6721, 0.7679])}
	 TEST : {'MRR': 0.6101644933223724, 'hits@[1,3,10]': tensor([0.5303, 0.6559, 0.7565])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.6230415105819702
test:  0.6111392080783844
	 VALID :  {'MRR': 0.6230415105819702, 'hits@[1,3,10]': tensor([0.5436, 0.6704, 0.7683])}
	 TEST : {'MRR': 0.6111392080783844, 'hits@[1,3,10]': tensor([0.5317, 0.6565, 0.7579])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.6228583455085754
test:  0.6114072203636169
	 VALID :  {'MRR': 0.6228583455085754, 'hits@[1,3,10]': tensor([0.5431, 0.6711, 0.7672])}
	 TEST : {'MRR': 0.6114072203636169, 'hits@[1,3,10]': tensor([0.5322, 0.6552, 0.7580])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.6228454113006592
test:  0.6116924285888672
	 VALID :  {'MRR': 0.6228454113006592, 'hits@[1,3,10]': tensor([0.5435, 0.6709, 0.7673])}
	 TEST : {'MRR': 0.6116924285888672, 'hits@[1,3,10]': tensor([0.5324, 0.6560, 0.7591])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.6230417191982269
test:  0.6120880842208862
	 VALID :  {'MRR': 0.6230417191982269, 'hits@[1,3,10]': tensor([0.5433, 0.6708, 0.7675])}
	 TEST : {'MRR': 0.6120880842208862, 'hits@[1,3,10]': tensor([0.5334, 0.6555, 0.7588])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.6214294731616974
test:  0.6085492074489594
	 VALID :  {'MRR': 0.6214294731616974, 'hits@[1,3,10]': tensor([0.5404, 0.6698, 0.7676])}
	 TEST : {'MRR': 0.6085492074489594, 'hits@[1,3,10]': tensor([0.5269, 0.6565, 0.7587])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.624675840139389
test:  0.6119597554206848
	 VALID :  {'MRR': 0.624675840139389, 'hits@[1,3,10]': tensor([0.5438, 0.6739, 0.7707])}
	 TEST : {'MRR': 0.6119597554206848, 'hits@[1,3,10]': tensor([0.5298, 0.6620, 0.7629])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.6273826658725739
test:  0.6154418885707855
	 VALID :  {'MRR': 0.6273826658725739, 'hits@[1,3,10]': tensor([0.5470, 0.6758, 0.7727])}
	 TEST : {'MRR': 0.6154418885707855, 'hits@[1,3,10]': tensor([0.5349, 0.6621, 0.7641])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.6288052201271057
test:  0.6158987581729889
	 VALID :  {'MRR': 0.6288052201271057, 'hits@[1,3,10]': tensor([0.5499, 0.6757, 0.7736])}
	 TEST : {'MRR': 0.6158987581729889, 'hits@[1,3,10]': tensor([0.5351, 0.6636, 0.7660])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6295167505741119
test:  0.6156640648841858
	 VALID :  {'MRR': 0.6295167505741119, 'hits@[1,3,10]': tensor([0.5494, 0.6770, 0.7740])}
	 TEST : {'MRR': 0.6156640648841858, 'hits@[1,3,10]': tensor([0.5343, 0.6637, 0.7668])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.629349559545517
test:  0.616121381521225
	 VALID :  {'MRR': 0.629349559545517, 'hits@[1,3,10]': tensor([0.5495, 0.6773, 0.7743])}
	 TEST : {'MRR': 0.616121381521225, 'hits@[1,3,10]': tensor([0.5344, 0.6649, 0.7672])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.6289525926113129
test:  0.615609347820282
	 VALID :  {'MRR': 0.6289525926113129, 'hits@[1,3,10]': tensor([0.5492, 0.6763, 0.7741])}
	 TEST : {'MRR': 0.615609347820282, 'hits@[1,3,10]': tensor([0.5343, 0.6632, 0.7659])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.6288630664348602
test:  0.615105003118515
	 VALID :  {'MRR': 0.6288630664348602, 'hits@[1,3,10]': tensor([0.5495, 0.6765, 0.7739])}
	 TEST : {'MRR': 0.615105003118515, 'hits@[1,3,10]': tensor([0.5330, 0.6634, 0.7663])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.6289763748645782
test:  0.6146571040153503
	 VALID :  {'MRR': 0.6289763748645782, 'hits@[1,3,10]': tensor([0.5494, 0.6767, 0.7735])}
	 TEST : {'MRR': 0.6146571040153503, 'hits@[1,3,10]': tensor([0.5331, 0.6623, 0.7658])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.6285176873207092
test:  0.6140010058879852
Early stopping ...


TEST :  {'MRR': 0.6156640648841858, 'hits@[1,3,10]': tensor([0.5343, 0.6637, 0.7668])}
