Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 32 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 128 requires_grad=True
embeddings.0.weight 912384 requires_grad=True
embeddings.1.weight 58880 requires_grad=True
embeddings.2.weight 46720 requires_grad=True
Total # parameters = 1018112
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.45893752574920654
test:  0.4423065185546875
	 VALID :  {'MRR': 0.45893752574920654, 'hits@[1,3,10]': tensor([0.3578, 0.5085, 0.6545])}
	 TEST : {'MRR': 0.4423065185546875, 'hits@[1,3,10]': tensor([0.3382, 0.4911, 0.6477])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.46982404589653015
test:  0.453301265835762
	 VALID :  {'MRR': 0.46982404589653015, 'hits@[1,3,10]': tensor([0.3675, 0.5213, 0.6674])}
	 TEST : {'MRR': 0.453301265835762, 'hits@[1,3,10]': tensor([0.3490, 0.5030, 0.6589])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.4741418808698654
test:  0.4587439149618149
	 VALID :  {'MRR': 0.4741418808698654, 'hits@[1,3,10]': tensor([0.3722, 0.5265, 0.6716])}
	 TEST : {'MRR': 0.4587439149618149, 'hits@[1,3,10]': tensor([0.3545, 0.5094, 0.6618])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.4757671356201172
test:  0.4619031995534897
	 VALID :  {'MRR': 0.4757671356201172, 'hits@[1,3,10]': tensor([0.3738, 0.5280, 0.6725])}
	 TEST : {'MRR': 0.4619031995534897, 'hits@[1,3,10]': tensor([0.3576, 0.5130, 0.6631])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.4778619259595871
test:  0.4636949747800827
	 VALID :  {'MRR': 0.4778619259595871, 'hits@[1,3,10]': tensor([0.3767, 0.5304, 0.6734])}
	 TEST : {'MRR': 0.4636949747800827, 'hits@[1,3,10]': tensor([0.3594, 0.5152, 0.6665])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.47925087809562683
test:  0.4646705389022827
	 VALID :  {'MRR': 0.47925087809562683, 'hits@[1,3,10]': tensor([0.3780, 0.5314, 0.6736])}
	 TEST : {'MRR': 0.4646705389022827, 'hits@[1,3,10]': tensor([0.3606, 0.5171, 0.6676])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.48024657368659973
test:  0.4652155637741089
	 VALID :  {'MRR': 0.48024657368659973, 'hits@[1,3,10]': tensor([0.3792, 0.5336, 0.6738])}
	 TEST : {'MRR': 0.4652155637741089, 'hits@[1,3,10]': tensor([0.3609, 0.5180, 0.6685])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.48146963119506836
test:  0.4661383777856827
	 VALID :  {'MRR': 0.48146963119506836, 'hits@[1,3,10]': tensor([0.3809, 0.5331, 0.6743])}
	 TEST : {'MRR': 0.4661383777856827, 'hits@[1,3,10]': tensor([0.3615, 0.5186, 0.6689])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.4813963323831558
test:  0.4669498950242996
	 VALID :  {'MRR': 0.4813963323831558, 'hits@[1,3,10]': tensor([0.3800, 0.5350, 0.6749])}
	 TEST : {'MRR': 0.4669498950242996, 'hits@[1,3,10]': tensor([0.3624, 0.5205, 0.6682])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.4823357164859772
test:  0.46708378195762634
	 VALID :  {'MRR': 0.4823357164859772, 'hits@[1,3,10]': tensor([0.3814, 0.5357, 0.6745])}
	 TEST : {'MRR': 0.46708378195762634, 'hits@[1,3,10]': tensor([0.3623, 0.5222, 0.6675])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.502858430147171
test:  0.48447225987911224
	 VALID :  {'MRR': 0.502858430147171, 'hits@[1,3,10]': tensor([0.4035, 0.5579, 0.6906])}
	 TEST : {'MRR': 0.48447225987911224, 'hits@[1,3,10]': tensor([0.3810, 0.5396, 0.6821])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.5091485530138016
test:  0.49173858761787415
	 VALID :  {'MRR': 0.5091485530138016, 'hits@[1,3,10]': tensor([0.4119, 0.5624, 0.6928])}
	 TEST : {'MRR': 0.49173858761787415, 'hits@[1,3,10]': tensor([0.3926, 0.5440, 0.6832])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.511146679520607
test:  0.49373625218868256
	 VALID :  {'MRR': 0.511146679520607, 'hits@[1,3,10]': tensor([0.4144, 0.5641, 0.6922])}
	 TEST : {'MRR': 0.49373625218868256, 'hits@[1,3,10]': tensor([0.3944, 0.5455, 0.6841])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.5122314393520355
test:  0.4942391514778137
	 VALID :  {'MRR': 0.5122314393520355, 'hits@[1,3,10]': tensor([0.4161, 0.5654, 0.6918])}
	 TEST : {'MRR': 0.4942391514778137, 'hits@[1,3,10]': tensor([0.3957, 0.5452, 0.6841])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.5136278569698334
test:  0.4952666163444519
	 VALID :  {'MRR': 0.5136278569698334, 'hits@[1,3,10]': tensor([0.4182, 0.5662, 0.6919])}
	 TEST : {'MRR': 0.4952666163444519, 'hits@[1,3,10]': tensor([0.3969, 0.5479, 0.6833])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.5138598084449768
test:  0.49624302983283997
	 VALID :  {'MRR': 0.5138598084449768, 'hits@[1,3,10]': tensor([0.4184, 0.5671, 0.6916])}
	 TEST : {'MRR': 0.49624302983283997, 'hits@[1,3,10]': tensor([0.3984, 0.5486, 0.6849])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.5137507319450378
test:  0.49574027955532074
	 VALID :  {'MRR': 0.5137507319450378, 'hits@[1,3,10]': tensor([0.4176, 0.5673, 0.6907])}
	 TEST : {'MRR': 0.49574027955532074, 'hits@[1,3,10]': tensor([0.3972, 0.5489, 0.6842])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.5136807262897491
test:  0.49561236798763275
	 VALID :  {'MRR': 0.5136807262897491, 'hits@[1,3,10]': tensor([0.4175, 0.5676, 0.6899])}
	 TEST : {'MRR': 0.49561236798763275, 'hits@[1,3,10]': tensor([0.3971, 0.5483, 0.6838])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.5143122524023056
test:  0.4969540536403656
	 VALID :  {'MRR': 0.5143122524023056, 'hits@[1,3,10]': tensor([0.4191, 0.5667, 0.6904])}
	 TEST : {'MRR': 0.4969540536403656, 'hits@[1,3,10]': tensor([0.3993, 0.5489, 0.6833])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.5146869421005249
test:  0.4965814799070358
	 VALID :  {'MRR': 0.5146869421005249, 'hits@[1,3,10]': tensor([0.4197, 0.5672, 0.6897])}
	 TEST : {'MRR': 0.4965814799070358, 'hits@[1,3,10]': tensor([0.3986, 0.5495, 0.6825])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.5147734582424164
test:  0.4972269982099533
	 VALID :  {'MRR': 0.5147734582424164, 'hits@[1,3,10]': tensor([0.4196, 0.5669, 0.6905])}
	 TEST : {'MRR': 0.4972269982099533, 'hits@[1,3,10]': tensor([0.3993, 0.5499, 0.6826])}
[ Epoch: 105 ]
[ Epoch: 106 ]
[ Epoch: 107 ]
[ Epoch: 108 ]
[ Epoch: 109 ]
valid:  0.5152061730623245
test:  0.4967564344406128
	 VALID :  {'MRR': 0.5152061730623245, 'hits@[1,3,10]': tensor([0.4201, 0.5674, 0.6908])}
	 TEST : {'MRR': 0.4967564344406128, 'hits@[1,3,10]': tensor([0.3986, 0.5495, 0.6825])}
[ Epoch: 110 ]
[ Epoch: 111 ]
[ Epoch: 112 ]
[ Epoch: 113 ]
[ Epoch: 114 ]
valid:  0.5152316838502884
test:  0.49750523269176483
	 VALID :  {'MRR': 0.5152316838502884, 'hits@[1,3,10]': tensor([0.4206, 0.5671, 0.6905])}
	 TEST : {'MRR': 0.49750523269176483, 'hits@[1,3,10]': tensor([0.3999, 0.5506, 0.6832])}
[ Epoch: 115 ]
[ Epoch: 116 ]
[ Epoch: 117 ]
[ Epoch: 118 ]
[ Epoch: 119 ]
valid:  0.5150473862886429
test:  0.4974192827939987
	 VALID :  {'MRR': 0.5150473862886429, 'hits@[1,3,10]': tensor([0.4206, 0.5669, 0.6906])}
	 TEST : {'MRR': 0.4974192827939987, 'hits@[1,3,10]': tensor([0.3994, 0.5505, 0.6829])}
[ Epoch: 120 ]
[ Epoch: 121 ]
[ Epoch: 122 ]
[ Epoch: 123 ]
[ Epoch: 124 ]
valid:  0.5155894458293915
test:  0.49748606979846954
	 VALID :  {'MRR': 0.5155894458293915, 'hits@[1,3,10]': tensor([0.4215, 0.5679, 0.6910])}
	 TEST : {'MRR': 0.49748606979846954, 'hits@[1,3,10]': tensor([0.3995, 0.5508, 0.6829])}
[ Epoch: 125 ]
[ Epoch: 126 ]
[ Epoch: 127 ]
[ Epoch: 128 ]
[ Epoch: 129 ]
valid:  0.5159664303064346
test:  0.4976264536380768
	 VALID :  {'MRR': 0.5159664303064346, 'hits@[1,3,10]': tensor([0.4222, 0.5679, 0.6910])}
	 TEST : {'MRR': 0.4976264536380768, 'hits@[1,3,10]': tensor([0.4000, 0.5504, 0.6822])}
[ Epoch: 130 ]
[ Epoch: 131 ]
[ Epoch: 132 ]
[ Epoch: 133 ]
[ Epoch: 134 ]
valid:  0.5161856561899185
test:  0.4982634335756302
	 VALID :  {'MRR': 0.5161856561899185, 'hits@[1,3,10]': tensor([0.4225, 0.5684, 0.6916])}
	 TEST : {'MRR': 0.4982634335756302, 'hits@[1,3,10]': tensor([0.4011, 0.5508, 0.6821])}
[ Epoch: 135 ]
[ Epoch: 136 ]
[ Epoch: 137 ]
[ Epoch: 138 ]
[ Epoch: 139 ]
valid:  0.5158691704273224
test:  0.49796968698501587
	 VALID :  {'MRR': 0.5158691704273224, 'hits@[1,3,10]': tensor([0.4218, 0.5682, 0.6925])}
	 TEST : {'MRR': 0.49796968698501587, 'hits@[1,3,10]': tensor([0.4006, 0.5517, 0.6825])}
[ Epoch: 140 ]
[ Epoch: 141 ]
[ Epoch: 142 ]
[ Epoch: 143 ]
[ Epoch: 144 ]
valid:  0.5160232037305832
test:  0.4981827288866043
	 VALID :  {'MRR': 0.5160232037305832, 'hits@[1,3,10]': tensor([0.4221, 0.5681, 0.6910])}
	 TEST : {'MRR': 0.4981827288866043, 'hits@[1,3,10]': tensor([0.4006, 0.5518, 0.6825])}
[ Epoch: 145 ]
[ Epoch: 146 ]
[ Epoch: 147 ]
[ Epoch: 148 ]
[ Epoch: 149 ]
valid:  0.5162566602230072
test:  0.49825018644332886
	 VALID :  {'MRR': 0.5162566602230072, 'hits@[1,3,10]': tensor([0.4224, 0.5674, 0.6915])}
	 TEST : {'MRR': 0.49825018644332886, 'hits@[1,3,10]': tensor([0.4009, 0.5509, 0.6822])}
[ Epoch: 150 ]
[ Epoch: 151 ]
[ Epoch: 152 ]
[ Epoch: 153 ]
[ Epoch: 154 ]
valid:  0.5163102746009827
test:  0.49786709249019623
	 VALID :  {'MRR': 0.5163102746009827, 'hits@[1,3,10]': tensor([0.4228, 0.5679, 0.6911])}
	 TEST : {'MRR': 0.49786709249019623, 'hits@[1,3,10]': tensor([0.4001, 0.5512, 0.6819])}
[ Epoch: 155 ]
[ Epoch: 156 ]
[ Epoch: 157 ]
[ Epoch: 158 ]
[ Epoch: 159 ]
valid:  0.5161672681570053
test:  0.4979107230901718
	 VALID :  {'MRR': 0.5161672681570053, 'hits@[1,3,10]': tensor([0.4230, 0.5677, 0.6911])}
	 TEST : {'MRR': 0.4979107230901718, 'hits@[1,3,10]': tensor([0.4002, 0.5515, 0.6823])}
[ Epoch: 160 ]
[ Epoch: 161 ]
[ Epoch: 162 ]
[ Epoch: 163 ]
[ Epoch: 164 ]
valid:  0.5157693922519684
test:  0.49773454666137695
	 VALID :  {'MRR': 0.5157693922519684, 'hits@[1,3,10]': tensor([0.4222, 0.5679, 0.6909])}
	 TEST : {'MRR': 0.49773454666137695, 'hits@[1,3,10]': tensor([0.4003, 0.5517, 0.6816])}
[ Epoch: 165 ]
[ Epoch: 166 ]
[ Epoch: 167 ]
[ Epoch: 168 ]
[ Epoch: 169 ]
valid:  0.5154936015605927
test:  0.4979806989431381
	 VALID :  {'MRR': 0.5154936015605927, 'hits@[1,3,10]': tensor([0.4218, 0.5678, 0.6920])}
	 TEST : {'MRR': 0.4979806989431381, 'hits@[1,3,10]': tensor([0.4005, 0.5520, 0.6817])}
[ Epoch: 170 ]
[ Epoch: 171 ]
[ Epoch: 172 ]
[ Epoch: 173 ]
[ Epoch: 174 ]
valid:  0.5157435685396194
test:  0.4975699931383133
	 VALID :  {'MRR': 0.5157435685396194, 'hits@[1,3,10]': tensor([0.4223, 0.5677, 0.6916])}
	 TEST : {'MRR': 0.4975699931383133, 'hits@[1,3,10]': tensor([0.3997, 0.5523, 0.6818])}
[ Epoch: 175 ]
[ Epoch: 176 ]
[ Epoch: 177 ]
[ Epoch: 178 ]
[ Epoch: 179 ]
valid:  0.5158909857273102
test:  0.4976796507835388
Early stopping ...


TEST :  {'MRR': 0.49786709249019623, 'hits@[1,3,10]': tensor([0.4001, 0.5512, 0.6819])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 64 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 256 requires_grad=True
embeddings.0.weight 1824768 requires_grad=True
embeddings.1.weight 117760 requires_grad=True
embeddings.2.weight 93440 requires_grad=True
Total # parameters = 2036224
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.5010569840669632
test:  0.48435381054878235
	 VALID :  {'MRR': 0.5010569840669632, 'hits@[1,3,10]': tensor([0.4033, 0.5525, 0.6872])}
	 TEST : {'MRR': 0.48435381054878235, 'hits@[1,3,10]': tensor([0.3840, 0.5358, 0.6783])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.5126286894083023
test:  0.4959883540868759
	 VALID :  {'MRR': 0.5126286894083023, 'hits@[1,3,10]': tensor([0.4158, 0.5665, 0.6945])}
	 TEST : {'MRR': 0.4959883540868759, 'hits@[1,3,10]': tensor([0.3969, 0.5489, 0.6826])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.5166288316249847
test:  0.5010087192058563
	 VALID :  {'MRR': 0.5166288316249847, 'hits@[1,3,10]': tensor([0.4205, 0.5698, 0.6966])}
	 TEST : {'MRR': 0.5010087192058563, 'hits@[1,3,10]': tensor([0.4024, 0.5544, 0.6851])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.5189301669597626
test:  0.502879723906517
	 VALID :  {'MRR': 0.5189301669597626, 'hits@[1,3,10]': tensor([0.4232, 0.5726, 0.6993])}
	 TEST : {'MRR': 0.502879723906517, 'hits@[1,3,10]': tensor([0.4049, 0.5559, 0.6873])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.5211310386657715
test:  0.5055828541517258
	 VALID :  {'MRR': 0.5211310386657715, 'hits@[1,3,10]': tensor([0.4265, 0.5731, 0.7007])}
	 TEST : {'MRR': 0.5055828541517258, 'hits@[1,3,10]': tensor([0.4082, 0.5583, 0.6885])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.5214143395423889
test:  0.5072532147169113
	 VALID :  {'MRR': 0.5214143395423889, 'hits@[1,3,10]': tensor([0.4267, 0.5731, 0.7010])}
	 TEST : {'MRR': 0.5072532147169113, 'hits@[1,3,10]': tensor([0.4107, 0.5591, 0.6887])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.5215918123722076
test:  0.50853131711483
	 VALID :  {'MRR': 0.5215918123722076, 'hits@[1,3,10]': tensor([0.4265, 0.5751, 0.7017])}
	 TEST : {'MRR': 0.50853131711483, 'hits@[1,3,10]': tensor([0.4127, 0.5599, 0.6891])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.5225143432617188
test:  0.5088192522525787
	 VALID :  {'MRR': 0.5225143432617188, 'hits@[1,3,10]': tensor([0.4282, 0.5743, 0.7023])}
	 TEST : {'MRR': 0.5088192522525787, 'hits@[1,3,10]': tensor([0.4130, 0.5600, 0.6889])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.5228649973869324
test:  0.5090179145336151
	 VALID :  {'MRR': 0.5228649973869324, 'hits@[1,3,10]': tensor([0.4287, 0.5754, 0.7032])}
	 TEST : {'MRR': 0.5090179145336151, 'hits@[1,3,10]': tensor([0.4126, 0.5618, 0.6898])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.5228201746940613
test:  0.5093402713537216
	 VALID :  {'MRR': 0.5228201746940613, 'hits@[1,3,10]': tensor([0.4283, 0.5748, 0.7023])}
	 TEST : {'MRR': 0.5093402713537216, 'hits@[1,3,10]': tensor([0.4127, 0.5630, 0.6907])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.5395950078964233
test:  0.526504635810852
	 VALID :  {'MRR': 0.5395950078964233, 'hits@[1,3,10]': tensor([0.4480, 0.5913, 0.7116])}
	 TEST : {'MRR': 0.526504635810852, 'hits@[1,3,10]': tensor([0.4318, 0.5803, 0.7019])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.543646365404129
test:  0.5326367914676666
	 VALID :  {'MRR': 0.543646365404129, 'hits@[1,3,10]': tensor([0.4521, 0.5962, 0.7133])}
	 TEST : {'MRR': 0.5326367914676666, 'hits@[1,3,10]': tensor([0.4395, 0.5859, 0.7036])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.5456837117671967
test:  0.5349500477313995
	 VALID :  {'MRR': 0.5456837117671967, 'hits@[1,3,10]': tensor([0.4554, 0.5977, 0.7135])}
	 TEST : {'MRR': 0.5349500477313995, 'hits@[1,3,10]': tensor([0.4429, 0.5875, 0.7043])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.5467057824134827
test:  0.5374531745910645
	 VALID :  {'MRR': 0.5467057824134827, 'hits@[1,3,10]': tensor([0.4565, 0.5995, 0.7114])}
	 TEST : {'MRR': 0.5374531745910645, 'hits@[1,3,10]': tensor([0.4460, 0.5901, 0.7056])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.5472069680690765
test:  0.5390803813934326
	 VALID :  {'MRR': 0.5472069680690765, 'hits@[1,3,10]': tensor([0.4569, 0.6012, 0.7122])}
	 TEST : {'MRR': 0.5390803813934326, 'hits@[1,3,10]': tensor([0.4486, 0.5909, 0.7047])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.5479542315006256
test:  0.5396531224250793
	 VALID :  {'MRR': 0.5479542315006256, 'hits@[1,3,10]': tensor([0.4577, 0.6026, 0.7110])}
	 TEST : {'MRR': 0.5396531224250793, 'hits@[1,3,10]': tensor([0.4495, 0.5909, 0.7063])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.5485807359218597
test:  0.5399184226989746
	 VALID :  {'MRR': 0.5485807359218597, 'hits@[1,3,10]': tensor([0.4593, 0.6017, 0.7116])}
	 TEST : {'MRR': 0.5399184226989746, 'hits@[1,3,10]': tensor([0.4501, 0.5903, 0.7065])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.5493542850017548
test:  0.5403438210487366
	 VALID :  {'MRR': 0.5493542850017548, 'hits@[1,3,10]': tensor([0.4609, 0.6014, 0.7111])}
	 TEST : {'MRR': 0.5403438210487366, 'hits@[1,3,10]': tensor([0.4509, 0.5915, 0.7071])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.5494243204593658
test:  0.5407193601131439
	 VALID :  {'MRR': 0.5494243204593658, 'hits@[1,3,10]': tensor([0.4611, 0.6007, 0.7113])}
	 TEST : {'MRR': 0.5407193601131439, 'hits@[1,3,10]': tensor([0.4512, 0.5920, 0.7066])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.5494163036346436
test:  0.5410774052143097
	 VALID :  {'MRR': 0.5494163036346436, 'hits@[1,3,10]': tensor([0.4609, 0.6009, 0.7105])}
	 TEST : {'MRR': 0.5410774052143097, 'hits@[1,3,10]': tensor([0.4521, 0.5918, 0.7065])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.5496504306793213
test:  0.541826605796814
	 VALID :  {'MRR': 0.5496504306793213, 'hits@[1,3,10]': tensor([0.4615, 0.6010, 0.7108])}
	 TEST : {'MRR': 0.541826605796814, 'hits@[1,3,10]': tensor([0.4531, 0.5926, 0.7067])}
[ Epoch: 105 ]
[ Epoch: 106 ]
[ Epoch: 107 ]
[ Epoch: 108 ]
[ Epoch: 109 ]
valid:  0.548928439617157
test:  0.5414587557315826
	 VALID :  {'MRR': 0.548928439617157, 'hits@[1,3,10]': tensor([0.4602, 0.6018, 0.7105])}
	 TEST : {'MRR': 0.5414587557315826, 'hits@[1,3,10]': tensor([0.4527, 0.5921, 0.7061])}
[ Epoch: 110 ]
[ Epoch: 111 ]
[ Epoch: 112 ]
[ Epoch: 113 ]
[ Epoch: 114 ]
valid:  0.5498626530170441
test:  0.5420101284980774
	 VALID :  {'MRR': 0.5498626530170441, 'hits@[1,3,10]': tensor([0.4620, 0.6005, 0.7107])}
	 TEST : {'MRR': 0.5420101284980774, 'hits@[1,3,10]': tensor([0.4538, 0.5910, 0.7064])}
[ Epoch: 115 ]
[ Epoch: 116 ]
[ Epoch: 117 ]
[ Epoch: 118 ]
[ Epoch: 119 ]
valid:  0.5494331121444702
test:  0.5416185259819031
	 VALID :  {'MRR': 0.5494331121444702, 'hits@[1,3,10]': tensor([0.4615, 0.6009, 0.7109])}
	 TEST : {'MRR': 0.5416185259819031, 'hits@[1,3,10]': tensor([0.4533, 0.5912, 0.7066])}
[ Epoch: 120 ]
[ Epoch: 121 ]
[ Epoch: 122 ]
[ Epoch: 123 ]
[ Epoch: 124 ]
valid:  0.5492140054702759
test:  0.5418896675109863
	 VALID :  {'MRR': 0.5492140054702759, 'hits@[1,3,10]': tensor([0.4613, 0.6002, 0.7112])}
	 TEST : {'MRR': 0.5418896675109863, 'hits@[1,3,10]': tensor([0.4539, 0.5914, 0.7058])}
[ Epoch: 125 ]
[ Epoch: 126 ]
[ Epoch: 127 ]
[ Epoch: 128 ]
[ Epoch: 129 ]
valid:  0.5487238168716431
test:  0.541902631521225
	 VALID :  {'MRR': 0.5487238168716431, 'hits@[1,3,10]': tensor([0.4601, 0.6016, 0.7114])}
	 TEST : {'MRR': 0.541902631521225, 'hits@[1,3,10]': tensor([0.4539, 0.5925, 0.7060])}
[ Epoch: 130 ]
[ Epoch: 131 ]
[ Epoch: 132 ]
[ Epoch: 133 ]
[ Epoch: 134 ]
valid:  0.5491248667240143
test:  0.5424714386463165
	 VALID :  {'MRR': 0.5491248667240143, 'hits@[1,3,10]': tensor([0.4612, 0.6005, 0.7112])}
	 TEST : {'MRR': 0.5424714386463165, 'hits@[1,3,10]': tensor([0.4553, 0.5919, 0.7056])}
[ Epoch: 135 ]
[ Epoch: 136 ]
[ Epoch: 137 ]
[ Epoch: 138 ]
[ Epoch: 139 ]
valid:  0.5488497018814087
test:  0.5419310033321381
Early stopping ...


TEST :  {'MRR': 0.5420101284980774, 'hits@[1,3,10]': tensor([0.4538, 0.5910, 0.7064])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 100 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 400 requires_grad=True
embeddings.0.weight 2851200 requires_grad=True
embeddings.1.weight 184000 requires_grad=True
embeddings.2.weight 146000 requires_grad=True
Total # parameters = 3181600
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.529659241437912
test:  0.5111597627401352
	 VALID :  {'MRR': 0.529659241437912, 'hits@[1,3,10]': tensor([0.4366, 0.5801, 0.7037])}
	 TEST : {'MRR': 0.5111597627401352, 'hits@[1,3,10]': tensor([0.4145, 0.5634, 0.6939])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.5367296040058136
test:  0.5215362906455994
	 VALID :  {'MRR': 0.5367296040058136, 'hits@[1,3,10]': tensor([0.4450, 0.5871, 0.7075])}
	 TEST : {'MRR': 0.5215362906455994, 'hits@[1,3,10]': tensor([0.4271, 0.5740, 0.6981])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.5402225852012634
test:  0.5260879099369049
	 VALID :  {'MRR': 0.5402225852012634, 'hits@[1,3,10]': tensor([0.4490, 0.5913, 0.7103])}
	 TEST : {'MRR': 0.5260879099369049, 'hits@[1,3,10]': tensor([0.4328, 0.5782, 0.7008])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.5414226055145264
test:  0.5274482369422913
	 VALID :  {'MRR': 0.5414226055145264, 'hits@[1,3,10]': tensor([0.4501, 0.5921, 0.7123])}
	 TEST : {'MRR': 0.5274482369422913, 'hits@[1,3,10]': tensor([0.4341, 0.5801, 0.7031])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.5426229238510132
test:  0.5289714932441711
	 VALID :  {'MRR': 0.5426229238510132, 'hits@[1,3,10]': tensor([0.4511, 0.5961, 0.7116])}
	 TEST : {'MRR': 0.5289714932441711, 'hits@[1,3,10]': tensor([0.4358, 0.5809, 0.7040])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.5448095798492432
test:  0.5309999585151672
	 VALID :  {'MRR': 0.5448095798492432, 'hits@[1,3,10]': tensor([0.4541, 0.5976, 0.7133])}
	 TEST : {'MRR': 0.5309999585151672, 'hits@[1,3,10]': tensor([0.4388, 0.5825, 0.7038])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.5450825989246368
test:  0.5309484601020813
	 VALID :  {'MRR': 0.5450825989246368, 'hits@[1,3,10]': tensor([0.4538, 0.5995, 0.7137])}
	 TEST : {'MRR': 0.5309484601020813, 'hits@[1,3,10]': tensor([0.4381, 0.5826, 0.7050])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.5456394553184509
test:  0.5318399369716644
	 VALID :  {'MRR': 0.5456394553184509, 'hits@[1,3,10]': tensor([0.4545, 0.6001, 0.7138])}
	 TEST : {'MRR': 0.5318399369716644, 'hits@[1,3,10]': tensor([0.4394, 0.5832, 0.7050])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.5462249517440796
test:  0.5325742363929749
	 VALID :  {'MRR': 0.5462249517440796, 'hits@[1,3,10]': tensor([0.4549, 0.6013, 0.7145])}
	 TEST : {'MRR': 0.5325742363929749, 'hits@[1,3,10]': tensor([0.4401, 0.5840, 0.7045])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.5466078519821167
test:  0.532565712928772
	 VALID :  {'MRR': 0.5466078519821167, 'hits@[1,3,10]': tensor([0.4554, 0.6018, 0.7139])}
	 TEST : {'MRR': 0.532565712928772, 'hits@[1,3,10]': tensor([0.4403, 0.5848, 0.7050])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.5592530369758606
test:  0.5446837544441223
	 VALID :  {'MRR': 0.5592530369758606, 'hits@[1,3,10]': tensor([0.4710, 0.6134, 0.7189])}
	 TEST : {'MRR': 0.5446837544441223, 'hits@[1,3,10]': tensor([0.4553, 0.5942, 0.7114])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.5646587908267975
test:  0.5505889654159546
	 VALID :  {'MRR': 0.5646587908267975, 'hits@[1,3,10]': tensor([0.4772, 0.6189, 0.7220])}
	 TEST : {'MRR': 0.5505889654159546, 'hits@[1,3,10]': tensor([0.4618, 0.6023, 0.7157])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.5671560168266296
test:  0.5541749596595764
	 VALID :  {'MRR': 0.5671560168266296, 'hits@[1,3,10]': tensor([0.4798, 0.6223, 0.7256])}
	 TEST : {'MRR': 0.5541749596595764, 'hits@[1,3,10]': tensor([0.4672, 0.6052, 0.7174])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.5679868161678314
test:  0.5555364489555359
	 VALID :  {'MRR': 0.5679868161678314, 'hits@[1,3,10]': tensor([0.4809, 0.6226, 0.7256])}
	 TEST : {'MRR': 0.5555364489555359, 'hits@[1,3,10]': tensor([0.4681, 0.6064, 0.7183])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.570044755935669
test:  0.5567082762718201
	 VALID :  {'MRR': 0.570044755935669, 'hits@[1,3,10]': tensor([0.4833, 0.6232, 0.7270])}
	 TEST : {'MRR': 0.5567082762718201, 'hits@[1,3,10]': tensor([0.4699, 0.6061, 0.7187])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.5712469220161438
test:  0.5572814643383026
	 VALID :  {'MRR': 0.5712469220161438, 'hits@[1,3,10]': tensor([0.4854, 0.6228, 0.7283])}
	 TEST : {'MRR': 0.5572814643383026, 'hits@[1,3,10]': tensor([0.4707, 0.6060, 0.7188])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.5713846385478973
test:  0.5579090416431427
	 VALID :  {'MRR': 0.5713846385478973, 'hits@[1,3,10]': tensor([0.4859, 0.6225, 0.7289])}
	 TEST : {'MRR': 0.5579090416431427, 'hits@[1,3,10]': tensor([0.4712, 0.6071, 0.7192])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.5715625882148743
test:  0.5573851466178894
	 VALID :  {'MRR': 0.5715625882148743, 'hits@[1,3,10]': tensor([0.4855, 0.6227, 0.7296])}
	 TEST : {'MRR': 0.5573851466178894, 'hits@[1,3,10]': tensor([0.4695, 0.6082, 0.7196])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.5723384022712708
test:  0.5584534406661987
	 VALID :  {'MRR': 0.5723384022712708, 'hits@[1,3,10]': tensor([0.4866, 0.6238, 0.7300])}
	 TEST : {'MRR': 0.5584534406661987, 'hits@[1,3,10]': tensor([0.4717, 0.6087, 0.7210])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.5719738900661469
test:  0.5585446059703827
	 VALID :  {'MRR': 0.5719738900661469, 'hits@[1,3,10]': tensor([0.4857, 0.6227, 0.7289])}
	 TEST : {'MRR': 0.5585446059703827, 'hits@[1,3,10]': tensor([0.4718, 0.6087, 0.7207])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.5723814368247986
test:  0.5590163469314575
	 VALID :  {'MRR': 0.5723814368247986, 'hits@[1,3,10]': tensor([0.4863, 0.6237, 0.7287])}
	 TEST : {'MRR': 0.5590163469314575, 'hits@[1,3,10]': tensor([0.4724, 0.6093, 0.7199])}
[ Epoch: 105 ]
[ Epoch: 106 ]
[ Epoch: 107 ]
[ Epoch: 108 ]
[ Epoch: 109 ]
valid:  0.5726452171802521
test:  0.5592694282531738
	 VALID :  {'MRR': 0.5726452171802521, 'hits@[1,3,10]': tensor([0.4864, 0.6236, 0.7296])}
	 TEST : {'MRR': 0.5592694282531738, 'hits@[1,3,10]': tensor([0.4728, 0.6095, 0.7200])}
[ Epoch: 110 ]
[ Epoch: 111 ]
[ Epoch: 112 ]
[ Epoch: 113 ]
[ Epoch: 114 ]
valid:  0.5730452835559845
test:  0.5587485730648041
	 VALID :  {'MRR': 0.5730452835559845, 'hits@[1,3,10]': tensor([0.4872, 0.6231, 0.7293])}
	 TEST : {'MRR': 0.5587485730648041, 'hits@[1,3,10]': tensor([0.4721, 0.6087, 0.7199])}
[ Epoch: 115 ]
[ Epoch: 116 ]
[ Epoch: 117 ]
[ Epoch: 118 ]
[ Epoch: 119 ]
valid:  0.5732601881027222
test:  0.5596595108509064
	 VALID :  {'MRR': 0.5732601881027222, 'hits@[1,3,10]': tensor([0.4874, 0.6244, 0.7284])}
	 TEST : {'MRR': 0.5596595108509064, 'hits@[1,3,10]': tensor([0.4738, 0.6089, 0.7196])}
[ Epoch: 120 ]
[ Epoch: 121 ]
[ Epoch: 122 ]
[ Epoch: 123 ]
[ Epoch: 124 ]
valid:  0.5732921063899994
test:  0.5589783489704132
	 VALID :  {'MRR': 0.5732921063899994, 'hits@[1,3,10]': tensor([0.4870, 0.6254, 0.7291])}
	 TEST : {'MRR': 0.5589783489704132, 'hits@[1,3,10]': tensor([0.4726, 0.6086, 0.7197])}
[ Epoch: 125 ]
[ Epoch: 126 ]
[ Epoch: 127 ]
[ Epoch: 128 ]
[ Epoch: 129 ]
valid:  0.5733505189418793
test:  0.5595303773880005
	 VALID :  {'MRR': 0.5733505189418793, 'hits@[1,3,10]': tensor([0.4870, 0.6258, 0.7281])}
	 TEST : {'MRR': 0.5595303773880005, 'hits@[1,3,10]': tensor([0.4734, 0.6087, 0.7197])}
[ Epoch: 130 ]
[ Epoch: 131 ]
[ Epoch: 132 ]
[ Epoch: 133 ]
[ Epoch: 134 ]
valid:  0.5733805596828461
test:  0.5588160753250122
	 VALID :  {'MRR': 0.5733805596828461, 'hits@[1,3,10]': tensor([0.4874, 0.6241, 0.7286])}
	 TEST : {'MRR': 0.5588160753250122, 'hits@[1,3,10]': tensor([0.4722, 0.6088, 0.7196])}
[ Epoch: 135 ]
[ Epoch: 136 ]
[ Epoch: 137 ]
[ Epoch: 138 ]
[ Epoch: 139 ]
valid:  0.5732094347476959
test:  0.5588466227054596
	 VALID :  {'MRR': 0.5732094347476959, 'hits@[1,3,10]': tensor([0.4874, 0.6235, 0.7286])}
	 TEST : {'MRR': 0.5588466227054596, 'hits@[1,3,10]': tensor([0.4722, 0.6084, 0.7195])}
[ Epoch: 140 ]
[ Epoch: 141 ]
[ Epoch: 142 ]
[ Epoch: 143 ]
[ Epoch: 144 ]
valid:  0.5737464725971222
test:  0.5595200657844543
	 VALID :  {'MRR': 0.5737464725971222, 'hits@[1,3,10]': tensor([0.4878, 0.6243, 0.7286])}
	 TEST : {'MRR': 0.5595200657844543, 'hits@[1,3,10]': tensor([0.4732, 0.6091, 0.7194])}
[ Epoch: 145 ]
[ Epoch: 146 ]
[ Epoch: 147 ]
[ Epoch: 148 ]
[ Epoch: 149 ]
valid:  0.5740301012992859
test:  0.5591950416564941
	 VALID :  {'MRR': 0.5740301012992859, 'hits@[1,3,10]': tensor([0.4884, 0.6238, 0.7285])}
	 TEST : {'MRR': 0.5591950416564941, 'hits@[1,3,10]': tensor([0.4727, 0.6081, 0.7189])}
[ Epoch: 150 ]
[ Epoch: 151 ]
[ Epoch: 152 ]
[ Epoch: 153 ]
[ Epoch: 154 ]
valid:  0.5737245976924896
test:  0.5589531064033508
	 VALID :  {'MRR': 0.5737245976924896, 'hits@[1,3,10]': tensor([0.4880, 0.6234, 0.7281])}
	 TEST : {'MRR': 0.5589531064033508, 'hits@[1,3,10]': tensor([0.4723, 0.6083, 0.7193])}
[ Epoch: 155 ]
[ Epoch: 156 ]
[ Epoch: 157 ]
[ Epoch: 158 ]
[ Epoch: 159 ]
valid:  0.5735116004943848
test:  0.5590991079807281
	 VALID :  {'MRR': 0.5735116004943848, 'hits@[1,3,10]': tensor([0.4878, 0.6243, 0.7278])}
	 TEST : {'MRR': 0.5590991079807281, 'hits@[1,3,10]': tensor([0.4724, 0.6085, 0.7192])}
[ Epoch: 160 ]
[ Epoch: 161 ]
[ Epoch: 162 ]
[ Epoch: 163 ]
[ Epoch: 164 ]
valid:  0.5739716589450836
test:  0.5588018894195557
	 VALID :  {'MRR': 0.5739716589450836, 'hits@[1,3,10]': tensor([0.4890, 0.6238, 0.7287])}
	 TEST : {'MRR': 0.5588018894195557, 'hits@[1,3,10]': tensor([0.4723, 0.6079, 0.7193])}
[ Epoch: 165 ]
[ Epoch: 166 ]
[ Epoch: 167 ]
[ Epoch: 168 ]
[ Epoch: 169 ]
valid:  0.5736666023731232
test:  0.5586667954921722
	 VALID :  {'MRR': 0.5736666023731232, 'hits@[1,3,10]': tensor([0.4881, 0.6241, 0.7283])}
	 TEST : {'MRR': 0.5586667954921722, 'hits@[1,3,10]': tensor([0.4721, 0.6079, 0.7187])}
[ Epoch: 170 ]
[ Epoch: 171 ]
[ Epoch: 172 ]
[ Epoch: 173 ]
[ Epoch: 174 ]
valid:  0.5734866857528687
test:  0.5590195059776306
Early stopping ...


TEST :  {'MRR': 0.5591950416564941, 'hits@[1,3,10]': tensor([0.4727, 0.6081, 0.7189])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 200 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 800 requires_grad=True
embeddings.0.weight 5702400 requires_grad=True
embeddings.1.weight 368000 requires_grad=True
embeddings.2.weight 292000 requires_grad=True
Total # parameters = 6363200
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.5641489028930664
test:  0.5480792224407196
	 VALID :  {'MRR': 0.5641489028930664, 'hits@[1,3,10]': tensor([0.4772, 0.6132, 0.7270])}
	 TEST : {'MRR': 0.5480792224407196, 'hits@[1,3,10]': tensor([0.4565, 0.6015, 0.7181])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.571927547454834
test:  0.5572423338890076
	 VALID :  {'MRR': 0.571927547454834, 'hits@[1,3,10]': tensor([0.4876, 0.6210, 0.7286])}
	 TEST : {'MRR': 0.5572423338890076, 'hits@[1,3,10]': tensor([0.4687, 0.6084, 0.7205])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.5756728053092957
test:  0.5633638799190521
	 VALID :  {'MRR': 0.5756728053092957, 'hits@[1,3,10]': tensor([0.4922, 0.6245, 0.7302])}
	 TEST : {'MRR': 0.5633638799190521, 'hits@[1,3,10]': tensor([0.4772, 0.6126, 0.7207])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.5779494941234589
test:  0.5655461847782135
	 VALID :  {'MRR': 0.5779494941234589, 'hits@[1,3,10]': tensor([0.4955, 0.6266, 0.7313])}
	 TEST : {'MRR': 0.5655461847782135, 'hits@[1,3,10]': tensor([0.4798, 0.6149, 0.7233])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.5797122716903687
test:  0.5663016438484192
	 VALID :  {'MRR': 0.5797122716903687, 'hits@[1,3,10]': tensor([0.4973, 0.6277, 0.7321])}
	 TEST : {'MRR': 0.5663016438484192, 'hits@[1,3,10]': tensor([0.4809, 0.6158, 0.7223])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.5801084637641907
test:  0.5682636499404907
	 VALID :  {'MRR': 0.5801084637641907, 'hits@[1,3,10]': tensor([0.4975, 0.6298, 0.7331])}
	 TEST : {'MRR': 0.5682636499404907, 'hits@[1,3,10]': tensor([0.4842, 0.6154, 0.7225])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.5814197957515717
test:  0.5693084001541138
	 VALID :  {'MRR': 0.5814197957515717, 'hits@[1,3,10]': tensor([0.4993, 0.6299, 0.7333])}
	 TEST : {'MRR': 0.5693084001541138, 'hits@[1,3,10]': tensor([0.4857, 0.6160, 0.7235])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.5817077159881592
test:  0.5695949196815491
	 VALID :  {'MRR': 0.5817077159881592, 'hits@[1,3,10]': tensor([0.4996, 0.6297, 0.7334])}
	 TEST : {'MRR': 0.5695949196815491, 'hits@[1,3,10]': tensor([0.4854, 0.6173, 0.7228])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.5829502940177917
test:  0.5703744292259216
	 VALID :  {'MRR': 0.5829502940177917, 'hits@[1,3,10]': tensor([0.5013, 0.6314, 0.7338])}
	 TEST : {'MRR': 0.5703744292259216, 'hits@[1,3,10]': tensor([0.4868, 0.6171, 0.7231])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.5829474031925201
test:  0.5712210834026337
	 VALID :  {'MRR': 0.5829474031925201, 'hits@[1,3,10]': tensor([0.5008, 0.6321, 0.7340])}
	 TEST : {'MRR': 0.5712210834026337, 'hits@[1,3,10]': tensor([0.4874, 0.6185, 0.7240])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.5868681967258453
test:  0.5746481716632843
	 VALID :  {'MRR': 0.5868681967258453, 'hits@[1,3,10]': tensor([0.5047, 0.6362, 0.7391])}
	 TEST : {'MRR': 0.5746481716632843, 'hits@[1,3,10]': tensor([0.4907, 0.6235, 0.7287])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.5941589176654816
test:  0.5812456607818604
	 VALID :  {'MRR': 0.5941589176654816, 'hits@[1,3,10]': tensor([0.5122, 0.6429, 0.7447])}
	 TEST : {'MRR': 0.5812456607818604, 'hits@[1,3,10]': tensor([0.4983, 0.6293, 0.7341])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.5980353057384491
test:  0.5838591158390045
	 VALID :  {'MRR': 0.5980353057384491, 'hits@[1,3,10]': tensor([0.5171, 0.6463, 0.7465])}
	 TEST : {'MRR': 0.5838591158390045, 'hits@[1,3,10]': tensor([0.5011, 0.6319, 0.7374])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.5997915863990784
test:  0.586098849773407
	 VALID :  {'MRR': 0.5997915863990784, 'hits@[1,3,10]': tensor([0.5191, 0.6487, 0.7481])}
	 TEST : {'MRR': 0.586098849773407, 'hits@[1,3,10]': tensor([0.5031, 0.6339, 0.7383])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6011471450328827
test:  0.5874754190444946
	 VALID :  {'MRR': 0.6011471450328827, 'hits@[1,3,10]': tensor([0.5199, 0.6494, 0.7500])}
	 TEST : {'MRR': 0.5874754190444946, 'hits@[1,3,10]': tensor([0.5044, 0.6342, 0.7392])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.6022943556308746
test:  0.5873369574546814
	 VALID :  {'MRR': 0.6022943556308746, 'hits@[1,3,10]': tensor([0.5221, 0.6491, 0.7499])}
	 TEST : {'MRR': 0.5873369574546814, 'hits@[1,3,10]': tensor([0.5035, 0.6347, 0.7407])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.602260172367096
test:  0.5877279937267303
	 VALID :  {'MRR': 0.602260172367096, 'hits@[1,3,10]': tensor([0.5211, 0.6486, 0.7508])}
	 TEST : {'MRR': 0.5877279937267303, 'hits@[1,3,10]': tensor([0.5044, 0.6351, 0.7414])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.602031797170639
test:  0.5885211825370789
	 VALID :  {'MRR': 0.602031797170639, 'hits@[1,3,10]': tensor([0.5212, 0.6489, 0.7500])}
	 TEST : {'MRR': 0.5885211825370789, 'hits@[1,3,10]': tensor([0.5050, 0.6361, 0.7416])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.6022591888904572
test:  0.5885113179683685
	 VALID :  {'MRR': 0.6022591888904572, 'hits@[1,3,10]': tensor([0.5215, 0.6495, 0.7511])}
	 TEST : {'MRR': 0.5885113179683685, 'hits@[1,3,10]': tensor([0.5050, 0.6367, 0.7421])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.6017333269119263
test:  0.5884333848953247
	 VALID :  {'MRR': 0.6017333269119263, 'hits@[1,3,10]': tensor([0.5206, 0.6492, 0.7513])}
	 TEST : {'MRR': 0.5884333848953247, 'hits@[1,3,10]': tensor([0.5047, 0.6364, 0.7412])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.6021729707717896
test:  0.588632196187973
Early stopping ...


TEST :  {'MRR': 0.5873369574546814, 'hits@[1,3,10]': tensor([0.5035, 0.6347, 0.7407])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 400 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 1600 requires_grad=True
embeddings.0.weight 11404800 requires_grad=True
embeddings.1.weight 736000 requires_grad=True
embeddings.2.weight 584000 requires_grad=True
Total # parameters = 12726400
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.5914149284362793
test:  0.5802462697029114
	 VALID :  {'MRR': 0.5914149284362793, 'hits@[1,3,10]': tensor([0.5076, 0.6422, 0.7450])}
	 TEST : {'MRR': 0.5802462697029114, 'hits@[1,3,10]': tensor([0.4948, 0.6310, 0.7378])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.599097341299057
test:  0.5883218050003052
	 VALID :  {'MRR': 0.599097341299057, 'hits@[1,3,10]': tensor([0.5171, 0.6483, 0.7477])}
	 TEST : {'MRR': 0.5883218050003052, 'hits@[1,3,10]': tensor([0.5064, 0.6357, 0.7399])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.6012600362300873
test:  0.5921213626861572
	 VALID :  {'MRR': 0.6012600362300873, 'hits@[1,3,10]': tensor([0.5200, 0.6504, 0.7500])}
	 TEST : {'MRR': 0.5921213626861572, 'hits@[1,3,10]': tensor([0.5109, 0.6388, 0.7424])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.6027278304100037
test:  0.5944537818431854
	 VALID :  {'MRR': 0.6027278304100037, 'hits@[1,3,10]': tensor([0.5226, 0.6508, 0.7513])}
	 TEST : {'MRR': 0.5944537818431854, 'hits@[1,3,10]': tensor([0.5144, 0.6388, 0.7435])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.6043727695941925
test:  0.5961532294750214
	 VALID :  {'MRR': 0.6043727695941925, 'hits@[1,3,10]': tensor([0.5244, 0.6530, 0.7529])}
	 TEST : {'MRR': 0.5961532294750214, 'hits@[1,3,10]': tensor([0.5162, 0.6417, 0.7439])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.6051624715328217
test:  0.5970768928527832
	 VALID :  {'MRR': 0.6051624715328217, 'hits@[1,3,10]': tensor([0.5252, 0.6526, 0.7526])}
	 TEST : {'MRR': 0.5970768928527832, 'hits@[1,3,10]': tensor([0.5173, 0.6429, 0.7454])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.6057513356208801
test:  0.5979593098163605
	 VALID :  {'MRR': 0.6057513356208801, 'hits@[1,3,10]': tensor([0.5259, 0.6521, 0.7530])}
	 TEST : {'MRR': 0.5979593098163605, 'hits@[1,3,10]': tensor([0.5181, 0.6421, 0.7465])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.6063936054706573
test:  0.5986239612102509
	 VALID :  {'MRR': 0.6063936054706573, 'hits@[1,3,10]': tensor([0.5267, 0.6527, 0.7527])}
	 TEST : {'MRR': 0.5986239612102509, 'hits@[1,3,10]': tensor([0.5190, 0.6431, 0.7465])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.606223851442337
test:  0.5990620255470276
	 VALID :  {'MRR': 0.606223851442337, 'hits@[1,3,10]': tensor([0.5265, 0.6522, 0.7529])}
	 TEST : {'MRR': 0.5990620255470276, 'hits@[1,3,10]': tensor([0.5197, 0.6436, 0.7467])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.6065781712532043
test:  0.5994890630245209
	 VALID :  {'MRR': 0.6065781712532043, 'hits@[1,3,10]': tensor([0.5271, 0.6523, 0.7530])}
	 TEST : {'MRR': 0.5994890630245209, 'hits@[1,3,10]': tensor([0.5206, 0.6436, 0.7474])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.6057042479515076
test:  0.5983295738697052
	 VALID :  {'MRR': 0.6057042479515076, 'hits@[1,3,10]': tensor([0.5251, 0.6553, 0.7506])}
	 TEST : {'MRR': 0.5983295738697052, 'hits@[1,3,10]': tensor([0.5180, 0.6447, 0.7479])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.612213134765625
test:  0.6044676899909973
	 VALID :  {'MRR': 0.612213134765625, 'hits@[1,3,10]': tensor([0.5328, 0.6608, 0.7555])}
	 TEST : {'MRR': 0.6044676899909973, 'hits@[1,3,10]': tensor([0.5250, 0.6493, 0.7524])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.6131418943405151
test:  0.6069247126579285
	 VALID :  {'MRR': 0.6131418943405151, 'hits@[1,3,10]': tensor([0.5327, 0.6612, 0.7582])}
	 TEST : {'MRR': 0.6069247126579285, 'hits@[1,3,10]': tensor([0.5274, 0.6518, 0.7569])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.6143858432769775
test:  0.6079423427581787
	 VALID :  {'MRR': 0.6143858432769775, 'hits@[1,3,10]': tensor([0.5348, 0.6618, 0.7588])}
	 TEST : {'MRR': 0.6079423427581787, 'hits@[1,3,10]': tensor([0.5289, 0.6518, 0.7585])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6151953637599945
test:  0.6085694432258606
	 VALID :  {'MRR': 0.6151953637599945, 'hits@[1,3,10]': tensor([0.5356, 0.6620, 0.7606])}
	 TEST : {'MRR': 0.6085694432258606, 'hits@[1,3,10]': tensor([0.5291, 0.6526, 0.7595])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.6169580519199371
test:  0.6096100509166718
	 VALID :  {'MRR': 0.6169580519199371, 'hits@[1,3,10]': tensor([0.5380, 0.6645, 0.7619])}
	 TEST : {'MRR': 0.6096100509166718, 'hits@[1,3,10]': tensor([0.5301, 0.6537, 0.7594])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.6155496537685394
test:  0.6085647940635681
	 VALID :  {'MRR': 0.6155496537685394, 'hits@[1,3,10]': tensor([0.5356, 0.6635, 0.7623])}
	 TEST : {'MRR': 0.6085647940635681, 'hits@[1,3,10]': tensor([0.5280, 0.6548, 0.7590])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.6157393753528595
test:  0.6084279716014862
	 VALID :  {'MRR': 0.6157393753528595, 'hits@[1,3,10]': tensor([0.5355, 0.6644, 0.7617])}
	 TEST : {'MRR': 0.6084279716014862, 'hits@[1,3,10]': tensor([0.5274, 0.6547, 0.7590])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.615524172782898
test:  0.6086408793926239
	 VALID :  {'MRR': 0.615524172782898, 'hits@[1,3,10]': tensor([0.5350, 0.6637, 0.7626])}
	 TEST : {'MRR': 0.6086408793926239, 'hits@[1,3,10]': tensor([0.5284, 0.6536, 0.7585])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.6143862009048462
test:  0.6080535352230072
	 VALID :  {'MRR': 0.6143862009048462, 'hits@[1,3,10]': tensor([0.5331, 0.6632, 0.7618])}
	 TEST : {'MRR': 0.6080535352230072, 'hits@[1,3,10]': tensor([0.5274, 0.6532, 0.7591])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.6149049401283264
test:  0.6081972420215607
Early stopping ...


TEST :  {'MRR': 0.6096100509166718, 'hits@[1,3,10]': tensor([0.5301, 0.6537, 0.7594])}
