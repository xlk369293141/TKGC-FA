Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS05-15 using rank = 2000 lr = 0.1 emb_reg = 0.0025 time_reg = 0.1 time_granularity = 1

Model Parameters
--------------------------
W.weight 8000 requires_grad=True
embeddings.0.weight 83904000 requires_grad=True
embeddings.1.weight 4016000 requires_grad=True
embeddings.2.weight 32136000 requires_grad=True
Total # parameters = 120064000
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.6666959822177887
test:  0.6642031967639923
train:  0.9857924580574036
	 TRAIN:  {'MRR': 0.9857924580574036, 'hits@[1,3,10]': tensor([0.9759, 0.9954, 0.9991])}
	 VALID :  {'MRR': 0.6666959822177887, 'hits@[1,3,10]': tensor([0.5866, 0.7164, 0.8118])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.6729854643344879
test:  0.670003741979599
train:  0.9964551627635956
	 TRAIN:  {'MRR': 0.9964551627635956, 'hits@[1,3,10]': tensor([0.9936, 0.9993, 0.9999])}
	 VALID :  {'MRR': 0.6729854643344879, 'hits@[1,3,10]': tensor([0.5953, 0.7211, 0.8141])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.6756210625171661
test:  0.6722278892993927
train:  0.9984535574913025
	 TRAIN:  {'MRR': 0.9984535574913025, 'hits@[1,3,10]': tensor([0.9971, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6756210625171661, 'hits@[1,3,10]': tensor([0.5989, 0.7228, 0.8156])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.6767975091934204
test:  0.6736567914485931
train:  0.9991517663002014
	 TRAIN:  {'MRR': 0.9991517663002014, 'hits@[1,3,10]': tensor([0.9984, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6767975091934204, 'hits@[1,3,10]': tensor([0.6002, 0.7234, 0.8165])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.6775239109992981
test:  0.6749795973300934
train:  0.9995183348655701
	 TRAIN:  {'MRR': 0.9995183348655701, 'hits@[1,3,10]': tensor([0.9991, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6775239109992981, 'hits@[1,3,10]': tensor([0.6010, 0.7243, 0.8168])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.6780428886413574
test:  0.674665778875351
train:  0.9996850192546844
	 TRAIN:  {'MRR': 0.9996850192546844, 'hits@[1,3,10]': tensor([0.9994, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6780428886413574, 'hits@[1,3,10]': tensor([0.6018, 0.7248, 0.8174])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.6780504882335663
test:  0.6750186085700989
train:  0.9998617172241211
	 TRAIN:  {'MRR': 0.9998617172241211, 'hits@[1,3,10]': tensor([0.9997, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6780504882335663, 'hits@[1,3,10]': tensor([0.6014, 0.7251, 0.8173])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.6782327592372894
test:  0.6751947700977325
train:  0.9998299479484558
	 TRAIN:  {'MRR': 0.9998299479484558, 'hits@[1,3,10]': tensor([0.9997, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6782327592372894, 'hits@[1,3,10]': tensor([0.6016, 0.7249, 0.8176])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.6786141097545624
test:  0.6756153702735901
train:  0.9998799860477448
	 TRAIN:  {'MRR': 0.9998799860477448, 'hits@[1,3,10]': tensor([0.9998, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6786141097545624, 'hits@[1,3,10]': tensor([0.6020, 0.7255, 0.8180])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.6785884499549866
test:  0.6756005883216858
train:  0.9999299943447113
	 TRAIN:  {'MRR': 0.9999299943447113, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6785884499549866, 'hits@[1,3,10]': tensor([0.6019, 0.7253, 0.8183])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.671062707901001
test:  0.6681904792785645
train:  0.9957621693611145
	 TRAIN:  {'MRR': 0.9957621693611145, 'hits@[1,3,10]': tensor([0.9927, 0.9987, 0.9998])}
	 VALID :  {'MRR': 0.671062707901001, 'hits@[1,3,10]': tensor([0.5924, 0.7203, 0.8125])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.6748563945293427
test:  0.6731554567813873
train:  0.9978439807891846
	 TRAIN:  {'MRR': 0.9978439807891846, 'hits@[1,3,10]': tensor([0.9962, 0.9995, 0.9999])}
	 VALID :  {'MRR': 0.6748563945293427, 'hits@[1,3,10]': tensor([0.5959, 0.7233, 0.8174])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.6778520345687866
test:  0.6755042374134064
train:  0.9989987313747406
	 TRAIN:  {'MRR': 0.9989987313747406, 'hits@[1,3,10]': tensor([0.9982, 0.9998, 1.0000])}
	 VALID :  {'MRR': 0.6778520345687866, 'hits@[1,3,10]': tensor([0.5999, 0.7254, 0.8206])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.6786777973175049
test:  0.6766162216663361
train:  0.9994722604751587
	 TRAIN:  {'MRR': 0.9994722604751587, 'hits@[1,3,10]': tensor([0.9990, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6786777973175049, 'hits@[1,3,10]': tensor([0.6002, 0.7267, 0.8216])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6792289316654205
test:  0.6773719787597656
train:  0.999668151140213
	 TRAIN:  {'MRR': 0.999668151140213, 'hits@[1,3,10]': tensor([0.9994, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6792289316654205, 'hits@[1,3,10]': tensor([0.6007, 0.7272, 0.8227])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.680054247379303
test:  0.6773232519626617
train:  0.9998058080673218
	 TRAIN:  {'MRR': 0.9998058080673218, 'hits@[1,3,10]': tensor([0.9996, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.680054247379303, 'hits@[1,3,10]': tensor([0.6016, 0.7277, 0.8230])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.6801935732364655
test:  0.6777200102806091
train:  0.999848335981369
	 TRAIN:  {'MRR': 0.999848335981369, 'hits@[1,3,10]': tensor([0.9997, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6801935732364655, 'hits@[1,3,10]': tensor([0.6019, 0.7278, 0.8235])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.6803958714008331
test:  0.6779131591320038
train:  0.9999183714389801
	 TRAIN:  {'MRR': 0.9999183714389801, 'hits@[1,3,10]': tensor([0.9998, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6803958714008331, 'hits@[1,3,10]': tensor([0.6021, 0.7280, 0.8238])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.6803656816482544
test:  0.6778830885887146
train:  0.999943345785141
	 TRAIN:  {'MRR': 0.999943345785141, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6803656816482544, 'hits@[1,3,10]': tensor([0.6016, 0.7284, 0.8242])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.6799800992012024
test:  0.6775806546211243
train:  0.9999583661556244
	 TRAIN:  {'MRR': 0.9999583661556244, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6799800992012024, 'hits@[1,3,10]': tensor([0.6008, 0.7282, 0.8240])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.680016428232193
test:  0.677381157875061
train:  0.9999650120735168
	 TRAIN:  {'MRR': 0.9999650120735168, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.680016428232193, 'hits@[1,3,10]': tensor([0.6010, 0.7286, 0.8240])}
[ Epoch: 105 ]
[ Epoch: 106 ]
[ Epoch: 107 ]
[ Epoch: 108 ]
[ Epoch: 109 ]
valid:  0.679646760225296
test:  0.6770429909229279
train:  0.9999699890613556
	 TRAIN:  {'MRR': 0.9999699890613556, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.679646760225296, 'hits@[1,3,10]': tensor([0.6004, 0.7277, 0.8240])}
[ Epoch: 110 ]
[ Epoch: 111 ]
[ Epoch: 112 ]
[ Epoch: 113 ]
[ Epoch: 114 ]
valid:  0.6792339086532593
test:  0.6762836277484894
train:  0.9999825060367584
	 TRAIN:  {'MRR': 0.9999825060367584, 'hits@[1,3,10]': tensor([1.0000, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6792339086532593, 'hits@[1,3,10]': tensor([0.6000, 0.7274, 0.8233])}
[ Epoch: 115 ]
[ Epoch: 116 ]
[ Epoch: 117 ]
[ Epoch: 118 ]
[ Epoch: 119 ]
valid:  0.679003119468689
test:  0.6762689650058746
train:  0.9999899864196777
	 TRAIN:  {'MRR': 0.9999899864196777, 'hits@[1,3,10]': tensor([1.0000, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.679003119468689, 'hits@[1,3,10]': tensor([0.5996, 0.7277, 0.8233])}
[ Epoch: 120 ]
[ Epoch: 121 ]
[ Epoch: 122 ]
[ Epoch: 123 ]
[ Epoch: 124 ]
valid:  0.6781682968139648
test:  0.6757384538650513
train:  0.9999849796295166
	 TRAIN:  {'MRR': 0.9999849796295166, 'hits@[1,3,10]': tensor([1.0000, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6781682968139648, 'hits@[1,3,10]': tensor([0.5985, 0.7270, 0.8229])}
[ Epoch: 125 ]
[ Epoch: 126 ]
[ Epoch: 127 ]
[ Epoch: 128 ]
[ Epoch: 129 ]
valid:  0.6785581111907959
test:  0.675266683101654
train:  0.9999949932098389
	 TRAIN:  {'MRR': 0.9999949932098389, 'hits@[1,3,10]': tensor([1.0000, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6785581111907959, 'hits@[1,3,10]': tensor([0.5996, 0.7267, 0.8231])}
[ Epoch: 130 ]
[ Epoch: 131 ]
[ Epoch: 132 ]
[ Epoch: 133 ]
[ Epoch: 134 ]
valid:  0.6775030493736267
test:  0.6746568977832794
train:  0.9999949932098389
	 TRAIN:  {'MRR': 0.9999949932098389, 'hits@[1,3,10]': tensor([1.0000, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6775030493736267, 'hits@[1,3,10]': tensor([0.5981, 0.7262, 0.8228])}
[ Epoch: 135 ]
[ Epoch: 136 ]
[ Epoch: 137 ]
[ Epoch: 138 ]
[ Epoch: 139 ]
valid:  0.677191972732544
test:  0.6744620501995087
train:  1.0
Early stopping ...


TEST :  {'MRR': 0.6779131591320038, 'hits@[1,3,10]': tensor([0.5989, 0.7267, 0.8218])}
Assume all timestamps are regularly spaced
Not using time intervals and events eval
Start training process:  TeLM on ICEWS14 using rank = 2000 lr = 0.1 emb_reg = 0.0075 time_reg = 0.01 time_granularity = 1

Model Parameters
--------------------------
W.weight 8000 requires_grad=True
embeddings.0.weight 57024000 requires_grad=True
embeddings.1.weight 3680000 requires_grad=True
embeddings.2.weight 2920000 requires_grad=True
Total # parameters = 63632000
--------------------------

[ Epoch: 0 ]
[ Epoch: 1 ]
[ Epoch: 2 ]
[ Epoch: 3 ]
[ Epoch: 4 ]
valid:  0.621414303779602
test:  0.6112582683563232
train:  0.9822672605514526
	 TRAIN:  {'MRR': 0.9822672605514526, 'hits@[1,3,10]': tensor([0.9691, 0.9954, 0.9993])}
	 VALID :  {'MRR': 0.621414303779602, 'hits@[1,3,10]': tensor([0.5376, 0.6742, 0.7709])}
[ Epoch: 5 ]
[ Epoch: 6 ]
[ Epoch: 7 ]
[ Epoch: 8 ]
[ Epoch: 9 ]
valid:  0.6289221346378326
test:  0.6171654164791107
train:  0.993426501750946
	 TRAIN:  {'MRR': 0.993426501750946, 'hits@[1,3,10]': tensor([0.9882, 0.9988, 0.9998])}
	 VALID :  {'MRR': 0.6289221346378326, 'hits@[1,3,10]': tensor([0.5489, 0.6790, 0.7743])}
[ Epoch: 10 ]
[ Epoch: 11 ]
[ Epoch: 12 ]
[ Epoch: 13 ]
[ Epoch: 14 ]
valid:  0.6292959451675415
test:  0.6192457973957062
train:  0.996141254901886
	 TRAIN:  {'MRR': 0.996141254901886, 'hits@[1,3,10]': tensor([0.9930, 0.9993, 0.9998])}
	 VALID :  {'MRR': 0.6292959451675415, 'hits@[1,3,10]': tensor([0.5485, 0.6798, 0.7749])}
[ Epoch: 15 ]
[ Epoch: 16 ]
[ Epoch: 17 ]
[ Epoch: 18 ]
[ Epoch: 19 ]
valid:  0.6306968033313751
test:  0.6206549406051636
train:  0.9974112808704376
	 TRAIN:  {'MRR': 0.9974112808704376, 'hits@[1,3,10]': tensor([0.9952, 0.9996, 0.9999])}
	 VALID :  {'MRR': 0.6306968033313751, 'hits@[1,3,10]': tensor([0.5511, 0.6797, 0.7761])}
[ Epoch: 20 ]
[ Epoch: 21 ]
[ Epoch: 22 ]
[ Epoch: 23 ]
[ Epoch: 24 ]
valid:  0.6316118538379669
test:  0.6210352182388306
train:  0.9980621039867401
	 TRAIN:  {'MRR': 0.9980621039867401, 'hits@[1,3,10]': tensor([0.9965, 0.9996, 0.9999])}
	 VALID :  {'MRR': 0.6316118538379669, 'hits@[1,3,10]': tensor([0.5527, 0.6794, 0.7768])}
[ Epoch: 25 ]
[ Epoch: 26 ]
[ Epoch: 27 ]
[ Epoch: 28 ]
[ Epoch: 29 ]
valid:  0.632165938615799
test:  0.6218475997447968
train:  0.9986190795898438
	 TRAIN:  {'MRR': 0.9986190795898438, 'hits@[1,3,10]': tensor([0.9975, 0.9997, 0.9999])}
	 VALID :  {'MRR': 0.632165938615799, 'hits@[1,3,10]': tensor([0.5537, 0.6797, 0.7768])}
[ Epoch: 30 ]
[ Epoch: 31 ]
[ Epoch: 32 ]
[ Epoch: 33 ]
[ Epoch: 34 ]
valid:  0.6314130425453186
test:  0.622350424528122
train:  0.9988867342472076
	 TRAIN:  {'MRR': 0.9988867342472076, 'hits@[1,3,10]': tensor([0.9980, 0.9997, 1.0000])}
	 VALID :  {'MRR': 0.6314130425453186, 'hits@[1,3,10]': tensor([0.5524, 0.6787, 0.7770])}
[ Epoch: 35 ]
[ Epoch: 36 ]
[ Epoch: 37 ]
[ Epoch: 38 ]
[ Epoch: 39 ]
valid:  0.6310918629169464
test:  0.6226699352264404
train:  0.9990824162960052
	 TRAIN:  {'MRR': 0.9990824162960052, 'hits@[1,3,10]': tensor([0.9983, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6310918629169464, 'hits@[1,3,10]': tensor([0.5516, 0.6792, 0.7772])}
[ Epoch: 40 ]
[ Epoch: 41 ]
[ Epoch: 42 ]
[ Epoch: 43 ]
[ Epoch: 44 ]
valid:  0.6316142976284027
test:  0.6221326887607574
train:  0.999227374792099
	 TRAIN:  {'MRR': 0.999227374792099, 'hits@[1,3,10]': tensor([0.9986, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6316142976284027, 'hits@[1,3,10]': tensor([0.5526, 0.6787, 0.7765])}
[ Epoch: 45 ]
[ Epoch: 46 ]
[ Epoch: 47 ]
[ Epoch: 48 ]
[ Epoch: 49 ]
valid:  0.6316227912902832
test:  0.6224800646305084
train:  0.9992420673370361
	 TRAIN:  {'MRR': 0.9992420673370361, 'hits@[1,3,10]': tensor([0.9986, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6316227912902832, 'hits@[1,3,10]': tensor([0.5530, 0.6782, 0.7768])}
[ Epoch: 50 ]
[ Epoch: 51 ]
[ Epoch: 52 ]
[ Epoch: 53 ]
[ Epoch: 54 ]
valid:  0.626959502696991
test:  0.6157225072383881
train:  0.9956553280353546
	 TRAIN:  {'MRR': 0.9956553280353546, 'hits@[1,3,10]': tensor([0.9921, 0.9993, 0.9999])}
	 VALID :  {'MRR': 0.626959502696991, 'hits@[1,3,10]': tensor([0.5470, 0.6764, 0.7717])}
[ Epoch: 55 ]
[ Epoch: 56 ]
[ Epoch: 57 ]
[ Epoch: 58 ]
[ Epoch: 59 ]
valid:  0.6302289664745331
test:  0.6201448440551758
train:  0.9984440505504608
	 TRAIN:  {'MRR': 0.9984440505504608, 'hits@[1,3,10]': tensor([0.9971, 0.9998, 1.0000])}
	 VALID :  {'MRR': 0.6302289664745331, 'hits@[1,3,10]': tensor([0.5504, 0.6778, 0.7764])}
[ Epoch: 60 ]
[ Epoch: 61 ]
[ Epoch: 62 ]
[ Epoch: 63 ]
[ Epoch: 64 ]
valid:  0.6311309337615967
test:  0.6224894225597382
train:  0.9992037713527679
	 TRAIN:  {'MRR': 0.9992037713527679, 'hits@[1,3,10]': tensor([0.9985, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6311309337615967, 'hits@[1,3,10]': tensor([0.5504, 0.6796, 0.7775])}
[ Epoch: 65 ]
[ Epoch: 66 ]
[ Epoch: 67 ]
[ Epoch: 68 ]
[ Epoch: 69 ]
valid:  0.6325776278972626
test:  0.6231468021869659
train:  0.9994238913059235
	 TRAIN:  {'MRR': 0.9994238913059235, 'hits@[1,3,10]': tensor([0.9989, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6325776278972626, 'hits@[1,3,10]': tensor([0.5523, 0.6811, 0.7794])}
[ Epoch: 70 ]
[ Epoch: 71 ]
[ Epoch: 72 ]
[ Epoch: 73 ]
[ Epoch: 74 ]
valid:  0.6332002580165863
test:  0.6227914392948151
train:  0.9996429085731506
	 TRAIN:  {'MRR': 0.9996429085731506, 'hits@[1,3,10]': tensor([0.9993, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6332002580165863, 'hits@[1,3,10]': tensor([0.5535, 0.6806, 0.7796])}
[ Epoch: 75 ]
[ Epoch: 76 ]
[ Epoch: 77 ]
[ Epoch: 78 ]
[ Epoch: 79 ]
valid:  0.6330302655696869
test:  0.6222429573535919
train:  0.9997270703315735
	 TRAIN:  {'MRR': 0.9997270703315735, 'hits@[1,3,10]': tensor([0.9995, 0.9999, 1.0000])}
	 VALID :  {'MRR': 0.6330302655696869, 'hits@[1,3,10]': tensor([0.5533, 0.6808, 0.7789])}
[ Epoch: 80 ]
[ Epoch: 81 ]
[ Epoch: 82 ]
[ Epoch: 83 ]
[ Epoch: 84 ]
valid:  0.6334884762763977
test:  0.6231303811073303
train:  0.9997920095920563
	 TRAIN:  {'MRR': 0.9997920095920563, 'hits@[1,3,10]': tensor([0.9996, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6334884762763977, 'hits@[1,3,10]': tensor([0.5544, 0.6816, 0.7787])}
[ Epoch: 85 ]
[ Epoch: 86 ]
[ Epoch: 87 ]
[ Epoch: 88 ]
[ Epoch: 89 ]
valid:  0.6323581337928772
test:  0.6226657629013062
train:  0.9998432695865631
	 TRAIN:  {'MRR': 0.9998432695865631, 'hits@[1,3,10]': tensor([0.9997, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6323581337928772, 'hits@[1,3,10]': tensor([0.5526, 0.6793, 0.7790])}
[ Epoch: 90 ]
[ Epoch: 91 ]
[ Epoch: 92 ]
[ Epoch: 93 ]
[ Epoch: 94 ]
valid:  0.6322080194950104
test:  0.6213307082653046
train:  0.9998374879360199
	 TRAIN:  {'MRR': 0.9998374879360199, 'hits@[1,3,10]': tensor([0.9997, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6322080194950104, 'hits@[1,3,10]': tensor([0.5525, 0.6789, 0.7775])}
[ Epoch: 95 ]
[ Epoch: 96 ]
[ Epoch: 97 ]
[ Epoch: 98 ]
[ Epoch: 99 ]
valid:  0.6311647593975067
test:  0.620909184217453
train:  0.999901682138443
	 TRAIN:  {'MRR': 0.999901682138443, 'hits@[1,3,10]': tensor([0.9998, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6311647593975067, 'hits@[1,3,10]': tensor([0.5512, 0.6770, 0.7771])}
[ Epoch: 100 ]
[ Epoch: 101 ]
[ Epoch: 102 ]
[ Epoch: 103 ]
[ Epoch: 104 ]
valid:  0.6304374635219574
test:  0.6202407777309418
train:  0.9999282956123352
	 TRAIN:  {'MRR': 0.9999282956123352, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6304374635219574, 'hits@[1,3,10]': tensor([0.5499, 0.6772, 0.7759])}
[ Epoch: 105 ]
[ Epoch: 106 ]
[ Epoch: 107 ]
[ Epoch: 108 ]
[ Epoch: 109 ]
valid:  0.6298982799053192
test:  0.619552344083786
train:  0.9999532997608185
	 TRAIN:  {'MRR': 0.9999532997608185, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6298982799053192, 'hits@[1,3,10]': tensor([0.5503, 0.6759, 0.7763])}
[ Epoch: 110 ]
[ Epoch: 111 ]
[ Epoch: 112 ]
[ Epoch: 113 ]
[ Epoch: 114 ]
valid:  0.6293724179267883
test:  0.6194043755531311
train:  0.9999633431434631
	 TRAIN:  {'MRR': 0.9999633431434631, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6293724179267883, 'hits@[1,3,10]': tensor([0.5494, 0.6761, 0.7750])}
[ Epoch: 115 ]
[ Epoch: 116 ]
[ Epoch: 117 ]
[ Epoch: 118 ]
[ Epoch: 119 ]
valid:  0.6287369430065155
test:  0.6179051995277405
train:  0.9999633729457855
	 TRAIN:  {'MRR': 0.9999633729457855, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6287369430065155, 'hits@[1,3,10]': tensor([0.5485, 0.6746, 0.7744])}
[ Epoch: 120 ]
[ Epoch: 121 ]
[ Epoch: 122 ]
[ Epoch: 123 ]
[ Epoch: 124 ]
valid:  0.6283606588840485
test:  0.6172554790973663
train:  0.9999649822711945
	 TRAIN:  {'MRR': 0.9999649822711945, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6283606588840485, 'hits@[1,3,10]': tensor([0.5487, 0.6746, 0.7740])}
[ Epoch: 125 ]
[ Epoch: 126 ]
[ Epoch: 127 ]
[ Epoch: 128 ]
[ Epoch: 129 ]
valid:  0.6273415386676788
test:  0.6172082424163818
train:  0.9999633729457855
	 TRAIN:  {'MRR': 0.9999633729457855, 'hits@[1,3,10]': tensor([0.9999, 1.0000, 1.0000])}
	 VALID :  {'MRR': 0.6273415386676788, 'hits@[1,3,10]': tensor([0.5472, 0.6733, 0.7727])}
[ Epoch: 130 ]
[ Epoch: 131 ]
[ Epoch: 132 ]
[ Epoch: 133 ]
[ Epoch: 134 ]
valid:  0.6274301111698151
test:  0.6156228482723236
train:  0.9999533295631409
Early stopping ...


TEST :  {'MRR': 0.6231303811073303, 'hits@[1,3,10]': tensor([0.5422, 0.6704, 0.7726])}